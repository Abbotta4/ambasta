From 25f173b177ff68237dd8dd4eecca95c94457b7a2 Mon Sep 17 00:00:00 2001
From: Amit Prakash Ambasta <amit.prakash.ambasta@gmail.com>
Date: Tue, 5 Feb 2019 17:37:48 +0530
Subject: [PATCH] Add ability to select backends

---
 Makefile |  6 ++++++
 setup.py | 31 +++++++++++++++++++++++++++----
 2 files changed, 33 insertions(+), 4 deletions(-)

diff --git a/Makefile b/Makefile
index 0b724b3..7fd1a34 100644
--- a/Makefile
+++ b/Makefile
@@ -4,6 +4,12 @@ endif
 ifdef VERBOSE
 		VVAL=--verbose
 endif
+ifdef X11
+		VVAL=--backend=x11
+endif
+ifdef WAYLAND
+		VVAL=--backend=wayland
+endif
 
 all:
 	python3 setup.py $(VVAL)
diff --git a/setup.py b/setup.py
index b144060..7ce9842 100755
--- a/setup.py
+++ b/setup.py
@@ -429,9 +429,26 @@ def find_c_files():
     return tuple(ans), tuple(headers)
 
 
-def compile_glfw(incremental, compilation_database, all_keys):
-    modules = 'cocoa' if is_macos else 'x11 wayland'
-    for module in modules.split():
+def compile_glfw(incremental, compilation_database, all_keys, backends):
+    supported_backends = 'cocoa x11 wayland'.split()
+    backends = backends.split()
+
+    if 'all' in backends:
+        backends = supported_backends
+
+    if 'auto' in backends:
+        backends = 'cocoa' if is_macos else 'x11 wayland'
+
+    if 'cocoa' in backends and not is_macos:
+        print(error('Cocoa backend is only supported on MacOS'), file=sys.stderr)
+        raise
+
+    if is_macos:
+        print(error(', '.join(backends) + ' unsupported on MacOS'), file=sys.stderr)
+        raise
+
+    for module in backends:
+
         try:
             genv = glfw.init_env(env, pkg_config, at_least_version, test_compile, module)
         except SystemExit as err:
@@ -487,7 +504,7 @@ def build(args, native_optimizations=True):
         compile_c_extension(
             kitty_env(), 'kitty/fast_data_types', args.incremental, compilation_database, all_keys, *find_c_files()
         )
-        compile_glfw(args.incremental, compilation_database, all_keys)
+        compile_glfw(args.incremental, compilation_database, all_keys, args.backend)
         compile_kittens(args.incremental, compilation_database, all_keys)
         for key in set(compilation_database) - all_keys:
             del compilation_database[key]
@@ -806,6 +823,12 @@ def option_parser():  # {{{
         default='lib',
         help='The name of the directory inside --prefix in which to store compiled files. Defaults to "lib"'
     )
+    p.add_argument(
+        '--backend',
+        default='auto',
+        choices='auto cocoa x11 wayland all'.split(),
+        help='Build support for x11, wayland, all or auto. Defaults to auto'
+    )
     return p
 # }}}
 
-- 
2.20.1

